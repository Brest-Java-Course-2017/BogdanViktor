select_all_directors=select director_id, first_name, last_name from director
select_all_movies_with_director_name=select movie.movie_id, movie.movie_title, movie.release_date, movie.rating, \
                   movie.movie_director_id, director.first_name, director.last_name \
                    FROM director INNER JOIN movie ON director.director_id=movie.movie_director_id;
select_all_movies=select movie_id, movie_title, release_date, rating, movie_director_id FROM movie;
select_director_by_id=select director_id, first_name, last_name FROM director WHERE director_id = :director_id;
select_all_directors_with_movie_rating=\
                    SELECT director.director_id, director.first_name, director.last_name, \
                           ROUND(AVG(movie.rating),1) AS avarage \
                    FROM director LEFT JOIN movie ON director.director_id=movie.movie_director_id \
                    GROUP BY director.director_id;
select_movie_by_id=SELECT movie_id, movie_title, release_date, rating, movie_director_id \
                    FROM movie \
                    WHERE movie_id=:movie_id;
insert_director=INSERT INTO director \
                (director_id, first_name, last_name) \
                VALUES (:director_id, :first_name, :last_name);
insert_movie=INSERT INTO movie \
            (movie_id, movie_title, release_date, rating, movie_director_id) \
            VALUES (:movie_id, :movie_title, :release_date, :rating, :movie_director_id);
update_director=UPDATE director SET first_name= :first_name, last_name = :last_name \
                WHERE director_id = :director_id;
update_movie=UPDATE movie SET movie_title= :movie_title, release_date = :release_date, rating = :rating, \
                movie_director_id = :movie_director_id \
                WHERE movie_id = :movie_id;
delete_director=DELETE FROM director WHERE director_id = :director_id;
delete_movie=DELETE FROM movie WHERE movie_id = :movie_id;
select_movies_created_by_director=SELECT movie_id, movie_title, release_date, rating, movie_director_id \
                        FROM movie \
                        WHERE movie_director_id = :movie_director_id;
select_movies_with_date_filter=select movie.movie_id, movie.movie_title, movie.release_date, movie.rating, \
                        movie.movie_director_id, director.first_name, director.last_name \
                        FROM director INNER JOIN movie ON director.director_id=movie.movie_director_id \
                        WHERE movie.release_date BETWEEN :from_date AND :to_date;
select_director_by_first_and_last_name=select director_id, first_name, last_name \
                        FROM director \
                        WHERE lower(first_name)= lower(:first_name) AND lower(last_name)= lower(:last_name);
select_movie_by_title_and_release_date=SELECT movie_id, movie_title, release_date, rating, movie_director_id \
                        FROM movie \
                        WHERE lower(movie_title)= lower(:movie_title) AND release_date= :release_date;

#
#DROP TABLE IF EXISTS director;
#CREATE TABLE IF NOT EXISTS director (
#director_id INT NOT NULL AUTO_INCREMENT,
#first_name VARCHAR(30) NOT NULL,
#last_name VARCHAR(30) NOT NULL,
#PRIMARY KEY (director_id));
#
#DROP TABLE IF EXISTS movie;
#CREATE TABLE IF NOT EXISTS movie (
#movie_id INT NOT NULL AUTO_INCREMENT,
#movie_title VARCHAR(150) NOT NULL,
#release_date DATE NOT NULL,
#rating DOUBLE Not NULL,
#movieDirectorId int,
#PRIMARY KEY (movie_id),
#FOREIGN KEY (movieDirectorId) REFERENCES director (director_id)  );

